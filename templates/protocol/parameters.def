{{ pathParameters = data.parameters.filter((p) => { return p.in == "path" }); }}
{{ queryParameters = data.parameters.filter((p) => { return p.in == "query" }); }}
{{? pathParameters && pathParameters.length }}
### Path Parameters

<Properties>
{{~ pathParameters :p}}
    <Property name='{{= p.name }}' type='{{= p.safeType }}'>
        {{= p.shortDesc || 'none' }}
    </Property>
{{~}}
</Properties>
{{?}}

{{? queryParameters && queryParameters.length }}
### Query Parameters

<Properties>
{{~ queryParameters :q}}
    <Property name="{{= q.name }}" type="{{= q.safeType }}">
        {{= q.shortDesc || 'none' }}
    </Property>
{{~}}
</Properties>
{{?}}

{{? data.longDescs }}
### Detailed descriptions
{{~ data.parameters :p}}{{? p.shortDesc !== p.description}}
**{{=p.name}}**: {{=p.description}}{{?}}
{{~}}
{{?}}

{{~ data.parameters :p}}
{{? p.schema && p.schema.enum }}
{{~ p.schema.enum :e}}
{{ var entry = {}; entry.name = p.name; entry.value = e; data.enums.push(entry); }}
{{~}}
{{?}}

{{? p.schema && p.schema.items && p.schema.items.enum }}
{{~ p.schema.items.enum :e}}
{{ var entry = {}; entry.name = p.name; entry.value = e; data.enums.push(entry); }}
{{~}}
{{?}}
{{~}}

{{? data.enums && data.enums.length }}
#### Enumerated Values

|Parameter|Value|
|---|---|
{{~ data.enums :e}}|{{=e.name}}|{{=data.utils.toPrimitive(e.value)}}|
{{~}}
{{?}}